apiVersion: apps/v1
kind: Deployment
metadata:
  name: api1-deployment
  labels:
    app: api1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api1
  template:
    metadata:
      labels:
        app: api1
    spec:
      containers:
      - name: api1
        image: sabbadino/api1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        - containerPort: 8081
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Developent"

        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: api1-service
spec:
  type: LoadBalancer
  selector:
    app: api1
  ports:
  - protocol: TCP
    port: 8082
    targetPort: 8080
    # http://localhost:8082/WeatherForecast
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: api1-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   rules:
#   - host: api1.example.com # Replace with your domain
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: api1-service
#             port:
#               number: 8080
